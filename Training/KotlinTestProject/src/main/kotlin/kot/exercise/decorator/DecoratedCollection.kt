package kot.exercise.decorator

/**
 * Реализация паттерна декоратор
 * Последовательность действий которая необходима для реализации в Java:
 * 1. Создаётся класс с тем же интерфейсом, что у оригинального класса
 * 2. Экземпляр оригинального класса сохраняется в поле нового класса
 * 3. Методы, поведение которых должно остаться неизменным, просто передают вызовы оригинальному экземпляру класса
 * Декоратор позволяет расширить функционал оригинального класса
 */
class DecoratedCollection<T>(innerList: Collection<T> = ArrayList<T>()) : Collection<T> by innerList {

}