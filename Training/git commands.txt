locate gitconfig - show path to git global configuration file

git reset --hard commit_hash  - возвращает проект к указанному коммиту, при этом полностью удаляет все коммиты после указанного
git reset --mixed commit_hash - возвращает проект к указанному коммиту, при этом переводит все коммиты после указанного в неотслеживаемую (unstaged) зону
git reset --soft commit_hash  - возвращает проект к указанному коммиту, при этом переводит все коммиты после указанного в отслеживаемую (staged) зону
git reset --hard HEAD         - откатывает все изменения на состояние последнего (актуального) коммита

git revert commit_hash        - откатить изменения указанного коммита с сохранением истории (будет создан коммит с противоположными изменениями)

git checkout commit_hash      - переключиться на состояние указанного коммита (git checkout branch_name - вернуться на актуальное состояние ветки)
git checkout -- file_name     - откатить изменения в указанном файле на последнее закоммиченное состояние
git checkout branch_name      - переключиться на указанную ветку
git checkout -b branch_name   - создать новую ветку

git branch -d branch_name     - удалить локальную ветку с указанным названием

Вливание изменений в нужную ветку (merge):
1. Переключиться на ветка_в_которую_надо_влить
2. Выполнить команду git merge ветка_в_которой_велась_разработка
Ctrl + O
Ctrl + M
Ctrl + X

Вливание изменений в нужную ветку (rebase):
1. git fetch
2. Встать на ветку где производилась разработка функционала и выполнить команду: git rebase origin/ветка_в_которую_надо_влить
3. Переключиться на ветка_в_которую_надо_влить
4. Выполнить команду: git merge ветка_в_которой_велась_разработка --no-ff
Ctrl + O
Ctrl + M
Ctrl + X

Обновление feature-ветки:
Ситуация: есть локальная и удалённая feature-ветка (удалённая ветка уже содержит ряд feature-коммитов)
Обновление при помощи rebase:
Если обновили свою feature-ветку при помощи rebase и нужно сделать push этой ветки в удалённый репозиторий, то нужно использовать команду git push --force-with-lease origin branch_name
Параметр --force-with-lease - не даёт запушить если в удалённом репозитории есть коммиты, добавленные другими пользователями
Параметр --force-with-lease - нужно указывать по той причине что история коммитов в локальной ветке из-за rebase имеет перебазированное состояние, которое отличается от состояния в удалённой ветке.
При попытке выполнить push без force получим ошибку:
Updates were rejected because the tip of your current branch is behind its remote counterpart. Integrate the remote changes (e.g. 'git pull ...') before pushing again.
P.S. если кто-то ещё использует данную feature-ветку (что бывает редко), то выполнение команды git push -f origin branch_name нужно предварительно согласовать с ним

cherry-pick (применяет коммит к текущей ветке):
1. Встать на ветку, в которую нужно внести изменения
2. Выполнить git cherry-pick commit_hash

Удаление локальной ветки:
git branch -D branch_name

Удаление удалённой ветки:
git push --delete origin branch_name

Удаление конкретного коммита без сохранения истории, который не является HEAD (interactive rebase):
1. Указать диапазон коммитов с которыми мы будем работать в рамках interactive rebase
git rebase -i --no-autosquash HEAD~3 - будут выбраны последние 3 коммита, при этом после rebase они не будут "склеиваться"
2. Далее появится диалоговое окно в котором можно задать инструкции для interactive rebase
В этом окне нужно удалить строчку с коммитом который более нам не нужен (остальные сообщения не трогать)
3. Сохранить и выйти
   Ctrl + O
   Ctrl + M
   Ctrl + X
4. git push --force + предупредить коллег о совершённом force push
P.S. Все вышеуказанные действия (кроме п.4) можно сделать через IDEA при помощи: коммит -> drop commit

Объединить последовательный ряд коммитов в один:
IDEA -> вкладка git -> пр.кн.мыши по коммиту с которого надо начать объединение -> Interactively rebase from here -> выделить нужные коммиты -> нажать squash -> start rebasing -> git push --force

Примечание:
- Если применялся git push --force:
  Сообщить коллегам, что в ветке был применён git push --force и нужно обновить свои локальные ветки
